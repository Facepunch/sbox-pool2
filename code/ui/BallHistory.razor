@using Sandbox;
@using Sandbox.UI;
@using System;
@using System.Collections.Generic;

@namespace Facepunch.Pool
@attribute [StyleSheet( "/ui/BallHistory.scss" )]
@inherits Panel

<root class="@GetHiddenClass()">
    @for (var i = 0; i < 15; i++)
    {
        if ( i < Items.Count ) {
            <BallHistoryItem BallType=@Items[i].BallType BallNumber=@Items[i].BallNumber></BallHistoryItem>
        } else {
            <BallHistoryItem BallType=@PoolBallType.White></BallHistoryItem>
        }
    }
</root>

@code
{
    public static BallHistory Current;

    public BallHistory()
    {
        Current = this;
    }

    private List<BallHistoryItem> Items { get; set; } = new();

    public void AddBall( PoolBall ball )
    {
        Items.Add( new()
        {
            BallType = ball.Type,
            BallNumber = ball.Number
        } );
    }

    public void AddByType( PoolBallType type, PoolBallNumber number )
    {
        Items.Add( new()
        {
            BallType = type,
            BallNumber = number
        } );
    }

    public void Clear()
    {
        Items.Clear();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Items.Count );
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
	    GameState.Instance.UpdatePotHistory();
        base.OnAfterTreeRender( firstTime );
    }

    private string GetHiddenClass()
    {
	    return GameState.Instance.State != RoundState.Playing ? "hidden" : string.Empty;
    }
}
